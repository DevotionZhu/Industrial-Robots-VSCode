from update_themes import *

#************************************  ABB RAPID language   **************************************
repository = {}
#------------------------------------



repo_begin_end(repository, "!", r'(?=\n)', name_comment, "comment")
repo_begin_end(repository, r'MESSAGE[', r']', name_string, "string")

match = r'\\b[0-9]\\b'
repo_match(repository, match, name_numeric, "numbers")

match = "CALL END ELSE IF JMP JMP PAUSE THEN WAIT OVERRIDE UFRAME_NUM UTOOL_NUM AND SKIP CONDITION PAYLOAD ARMLOAD SELECT sec AND OR ABORT ENTER ZONE I EXIT RUN F TRUE FALSE PROG MN POS BEFORE"
repo_match(repository, match, name_control, "control")

match = "L J"
repo_match(repository, match, name_movements, "movement")

match = "GP1 GP2 X UF UT CONFIG U T Y Z W P R MM DEG J1 J2 mm deg uninit Z GP"
repo_match(repository, match, name_builtInVar, "built-in-var")

match = ""
repo_match(repository, match, name_builtInFcn, "built-in-fcn")


match = "C_MOTSET C_PROGDISP ERRNO INTNO ROB_ID TUNE_DF TUNE_KP TUNE_KV TUNE_TI TUNE_FRIC_LEV TUNE_FRIC_RAMP TUNE_DG TUNE_DH TUNE_DI TUNE_DK TUNE_DL AIO_ABOVE_HIGH AIO_BELOW_HIGH AIO_ABOVE_LOW AIO_BELOW_LOW AIO_BETWEEN AIO_OUTSIDE AIO_ALWAYS RESUNKWN RESOK RESABORT RESRETRY RESIGNORE RESCANCEL RESYES RESNO BTNNONE BTNOK BTNABRTRTRYIGN BTNOKCANCEL BTNRETRYCANCEL BTNYESNO BTNYESNOCANCEL IOBUS_LOG_STATE_STOPPED IOBUS_LOG_STATE_STARTED IOBUS_PHYS_STATE_HALTED IOBUS_PHYS_STATE_RUNNING IOBUS_PHYS_STATE_ERROR IOBUS_PHYS_STATE_STARTUP IOBUS_PHYS_STATE_INIT BUSSTATE_HALTED BUSSTATE_RUN BUSSTATE_ERROR BUSSTATE_STARTUP BUSSTATE_INIT LOW HIGH EDGE COMMON_ERR OP_STATE SYSTEM_ERR HARDWARE_ERR PROGRAM_ERR MOTION_ERR OPERATOR_ERR IO_COM_ERR USER_DEF_ERR OPTION_PROD_ERR PROCESS_ERR CFG_ERR ERR_ACC_TOO_LOW ERR_ALIASIO_DEF ERR_ALIASIO_TYPE ERR_ALRDYCNT ERR_ALRDY_MOVING ERR_AO_LIM ERR_ARGDUPCND ERR_ARGNAME ERR_ARGNOTPER ERR_ARGNOTVAR ERR_ARGVALERR ERR_AXIS_ACT ERR_AXIS_IND ERR_AXIS_MOVING ERR_AXIS_PAR ERR_BUSSTATE ERR_BWDLIMIT ERR_CALC_NEG ERR_CALC_OVERFLOW ERR_CALC_DIVZERO ERR_CALLPROC ERR_CFG_INTERNAL ERR_CFG_ILLTYPE ERR_CFG_LIMIT ERR_CFG_NOTFND ERR_CFG_OUTOFBOUNDS ERR_CNTNOTVAR ERR_CNV_NOT_ACT ERR_CNV_CONNECT ERR_CNV_DROPPED ERR_COMM_EXT ERR_COMM_INIT_FAILED ERR_DATA_RECV ERR_DEV_MAXTIME ERR_DIPLAG_LIM ERR_DIVZERO ERR_EXECPHR ERR_FILEACC ERR_FILEEXIST ERR_FILEOPEN ERR_FILNOTFND ERR_FNCNORET ERR_FRAME ERR_GO_LIM ERR_ILLDIM ERR_ILLQUAT ERR_ILLRAISE ERR_INDCNV_ORDER ERR_INOISSAFE ERR_INOMAX ERR_INT_NOTVAL ERR_INT_MAXVAL ERR_INVDIM ERR_IODISABLE ERR_IOENABLE ERR_IOERROR ERR_LINKREF ERR_LOADED ERR_LOADID_FATAL ERR_LOADID_RETRY ERR_LOADNO_INUSE ERR_LOADNO_NOUSE ERR_MAXINTVAL ERR_MODULE ERR_MOD_NOTLOADED ERR_NAME_INVALID ERR_NORUNUNIT ERR_NOTARR ERR_NOTEQDIM ERR_NOTINTVAL ERR_NOTPRES ERR_NOTSAVED ERR_NOT_MOVETASK ERR_NUM_LIMIT ERR_OUTOFBND ERR_OVERFLOW ERR_PATH ERR_PATHDIST ERR_PATH_STOP ERR_PID_MOVESTOP ERR_PID_RAISE_PP ERR_PRGMEMFULL ERR_PROCSIGNAL_OFF ERR_PROGSTOP ERR_RANYBIN_CHK ERR_RANYBIN_EOF ERR_RCVDATA ERR_REFUNKDAT ERR_REFUNKFUN ERR_REFUNKPRC ERR_REFUNKTRP ERR_RMQ_DIM ERR_RMQ_FULL ERR_RMQ_INVALID ERR_RMQ_INVMSG ERR_RMQ_MSGSIZE ERR_RMQ_NAME ERR_RMQ_NOMSG ERR_RMQ_TIMEOUT ERR_RMQ_VALUE ERR_ROBLIMIT ERR_SC_WRITE ERR_SIGSUPSEARCH ERR_STARTMOVE ERR_ADDR_INUSE ERR_SOCK_CLOSED ERR_SOCK_TIMEOUT ERR_SPEED_REFRESH_LIM ERR_STRTOOLNG ERR_SYM_ACCESS ERR_SYNCMOVEOFF ERR_SYNCMOVEON ERR_SYNTAX ERR_TASKNAME ERR_TP_DIBREAK ERR_TP_DOBREAK ERR_TP_MAXTIME ERR_TP_NO_CLIENT ERR_TRUSTLEVEL ERR_TXTNOEXIST ERR_UI_INITVALUE ERR_UI_MAXMIN ERR_UI_NOTINT ERR_UISHOW_FATAL ERR_UISHOW_FULL ERR_UNIT_PAR ERR_UNKINO ERR_UNKPROC ERR_UNLOAD ERR_WAITSYNCTASK ERR_WAIT_MAXTIME ERR_WHLSEARCH ERR_WOBJ_MOVING ERRSTR_EMPTY ERRSTR_UNUSED ERRSTR_TASK ERRSTR_CONTEXT TYPE_ALL TYPE_STATE TYPE_WARN TYPE_ERR EVENT_NONE EVENT_POWERON EVENT_START EVENT_STOP EVENT_QSTOP EVENT_RESTART EVENT_RESET EVENT_STEP LEVEL_NORMAL LEVEL_TRAP LEVEL_SERVICE HANDLER_NONE HANDLER_BWD HANDLER_ERR HANDLER_UNDO ICONNONE ICONINFO ICONWARNING ICONERROR IOUNIT_LOG_STATE_DISABLED IOUNIT_LOG_STATE_ENABLED IOUNIT_PHYS_STATE_DEACTIVATED IOUNIT_PHYS_STATE_RUNNING IOUNIT_PHYS_STATE_ERROR IOUNIT_PHYS_STATE_UNCONNECTED IOUNIT_PHYS_STATE_UNCONFIGURED IOUNIT_PHYS_STATE_STARTUP IOUNIT_PHYS_STATE_INIT IOUNIT_RUNNING IOUNIT_RUNERROR IOUNIT_DISABLE IOUNIT_OTHERERR LOAD0 MASS_KNOWN MASS_WITH_AX3 PI OPADD OPSUB OPMULT OPDIV OPMOD LT LTEQ EQ NOTEQ GTEQ GT TOOL_LOAD_ID PAY_LOAD_ID IRBP_K IRBP_L IRBP_C IRBP_C_INDEX IRBP_T IRBP_R IRBP_A IRBP_B IRBP_D ROB_LOAD_VAL ROB_NOT_LOAD_VAL ROB_LM1_LOAD_VAL SOCKET_CREATED SOCKET_CONNECTED SOCKET_BOUND SOCKET_LISTENING SOCKET_CLOSED"
match += " AIOTRIGG BOOL BTNRES BUSSTATE BUTTONDATA BYTE CLOCK CONFDATA CORRDESCR DATAPOS DIONUM DIR DNUM ERRDOMAIN ERRNUM ERRSTR ERRTYPE EVENT_TYPE EXEC_LEVEL EXTJOINT HANDLER_TYPE ICONDATA IDENTNO INTNUM IODEV IOUNIT_STATE JOINTTARGET LISTITEM LOADDATA LOADIDNUM LOADSESSION MECUNIT MOTSETDATA NUM OPCALC OPNUM ORIENT PARIDNUM PARIDVALIDNUM PATHRECID POS POSE PROGDISP RAWBYTES RESTARTDATA RMQHEADER RMQMESSAGE RMQSLOT ROBJOINT ROBTARGET SHAPEDATA SIGNALAI SIGNALAO SIGNALDI SIGNALDO SIGNALGI SIGNALGO SOCKETDEV SOCKETSTATUS SPEEDDATA STOPPOINTDATA STRING STRINGDIG SWITCH SYMNUM SYNCIDENT TASKID TASKS TESTSIGNAL TOOLDATA TPNUM TRAPDATA TRIGGDATA TRIGGIOS TRIGGIOSDNUM TRIGGSTRGO TUNETYPE UISHOWNUM WOBJDATA WZSTATIONARY WZTEMPORARY ZONEDATA"
repo_match(repository, match, name_builtInTypes, "built-in-types")

match = "MOD DIV OR " # &lt;TDN&gt; &lt;DDN&gt; &lt;RDN&gt; &lt;PAR&gt; &lt;ALT&gt; &lt;DIM&gt; &lt;SMT&gt; &lt;VAR&gt; &lt;EIT&gt; &lt;CSE&gt; &lt;EXP&gt; &lt;ARG&gt; &lt;ID&gt; "
repo_match(repository, match, name_operator, "operator")


config_i = dict(default_config)
language_i = {}
language_i["id"] = "Fanuc"
language_i["aliases"]     = "Fanuc LS TP".split(" ")
language_i["extensions"]  = ".LS".split(" ")
language_i["configuration"] = getFileConfig(language_i["id"])
config_i["comments"] = {"lineComment": "!" }
config_i["folding"] = {
        "markers": {
            "start": r'\\b(/PROG|/MN|/POS)\\b',
            "end": r'\\b(/MN|/POS|/END)\\b'
        }
    }


print("Updating syntax...")
update_syntax(language_i["id"], repository)

print("Updating configuration...")
update_config(language_i["id"], config_i)

print("Done")

    

















